version: '3.3'

services:
  traefik:
    image: 'traefik'
    command:
      - '--metrics.prometheus=true'
      - '--api.insecure=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.web.address=:80'
    networks:
      - internal
    ports:
      - 80:80
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  prometheus:
    image: prom/prometheus
    restart: always
    networks:
      - internal
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./alerts.yml:/etc/prometheus/alerts.yml
    labels:
      - traefik.enable=true
      - traefik.http.routers.metrics.rule=Host(`metrics.car`)
      - traefik.http.routers.metrics.entrypoints=web

  grafana:
    image: grafana/grafana
    restart: always
    networks:
      - internal
    labels:
      - traefik.enable=true
      - traefik.http.routers.dashboard.rule=Host(`dash.car`)
      - traefik.http.routers.dashboard.entrypoints=web
  
  elm_exporter:
    build:
      context: elm327-exporter
      dockerfile: Containerfile
    privileged: true
    restart: always
    networks:
      - internal
    environment:
      - ELM_PORT=/dev/rfcomm0

  dht_exporter:
    build:
      context: dht11-exporter
      dockerfile: Containerfile
    privileged: true
    restart: always
    networks:
      - internal

  alert_indicator:
    build:
      context: alert-indicator
      dockerfile: Containerfile
    privileged: true
    restart: always
    networks:
      - internal
    environment:
      - LED_PIN=13
      - PROMETHEUS_URL=http://prometheus:9090
      - ALERT_NAME=ColdEngine

networks:
  internal:
